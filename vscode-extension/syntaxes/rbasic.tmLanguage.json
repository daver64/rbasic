{
    "name": "rbasic",
    "scopeName": "source.rbasic",
    "patterns": [
        {"include": "#comments"},
        {"include": "#strings"}, 
        {"include": "#numbers"},
        {"include": "#keywords"},
        {"include": "#builtin-functions"},
        {"include": "#operators"},
        {"include": "#punctuation"}
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.rbasic",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.rbasic", 
                    "begin": "/\\*",
                    "end": "\\*/",
                    "patterns": [
                        {
                            "name": "comment.block.rbasic",
                            "match": "."
                        }
                    ]
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.rbasic",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.rbasic",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.float.rbasic",
                    "match": "\\b\\d+\\.\\d*\\b"
                },
                {
                    "name": "constant.numeric.integer.rbasic",
                    "match": "\\b\\d+\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.conditional.rbasic",
                    "match": "\\b(if|then|else|end)\\b"
                },
                {
                    "name": "keyword.control.loop.rbasic", 
                    "match": "\\b(for|to|next|while|wend|break|continue)\\b"
                },
                {
                    "name": "keyword.control.flow.rbasic",
                    "match": "\\b(return|goto|gosub|call)\\b"
                },
                {
                    "name": "keyword.declaration.rbasic",
                    "match": "\\b(var|dim|function|sub|struct|type|const)\\b"
                },
                {
                    "name": "keyword.other.rbasic",
                    "match": "\\b(as)\\b"
                },
                {
                    "name": "storage.type.primitive.rbasic",
                    "match": "\\b(integer|double|string|boolean|thread|mutex|condition)\\b"
                },
                {
                    "name": "keyword.operator.logical.rbasic",
                    "match": "\\b(and|or|not|mod)\\b"
                },
                {
                    "name": "constant.language.boolean.rbasic",
                    "match": "\\b(true|false)\\b"
                }
            ]
        },
        "builtin-functions": {
            "patterns": [
                {
                    "name": "support.function.builtin.math.rbasic",
                    "match": "\\b(sqrt|abs|sin|cos|tan|asin|acos|atan|atan2|log|log10|exp|pow|floor|ceil|round|int|min|max|rnd|randomise|pi)\\b"
                },
                {
                    "name": "support.function.builtin.string.rbasic",
                    "match": "\\b(len|left|right|mid|str|val)\\b"
                },
                {
                    "name": "support.function.builtin.io.rbasic",
                    "match": "\\b(print|input|clear_screen|sleep_ms)\\b"
                },
                {
                    "name": "support.function.builtin.graphics.rbasic",
                    "match": "\\b(graphics_mode|text_mode|set_colour|draw_pixel|draw_line|draw_rect|draw_circle|draw_text|refresh_screen)\\b"
                },
                {
                    "name": "support.function.builtin.system.rbasic",
                    "match": "\\b(key_pressed|quit_requested|get_ticks)\\b"
                },
                {
                    "name": "support.function.builtin.thread.rbasic",
                    "match": "\\b(thread_create|thread_join|thread_result|thread_finished|mutex_lock|mutex_unlock|mutex_trylock|condition_wait|condition_signal|condition_broadcast)\\b"
                },
                {
                    "name": "support.function.builtin.database.rbasic",
                    "match": "\\b(db_open|db_close|db_exec|db_query|db_error|db_escape)\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.comparison.rbasic",
                    "match": "(==|!=|<=|>=|<|>)"
                },
                {
                    "name": "keyword.operator.assignment.rbasic",
                    "match": "="
                },
                {
                    "name": "keyword.operator.arithmetic.rbasic",
                    "match": "(\\+|\\-|\\*|\\/|\\^)"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "name": "punctuation.definition.parameters.begin.rbasic",
                    "match": "\\("
                },
                {
                    "name": "punctuation.definition.parameters.end.rbasic", 
                    "match": "\\)"
                },
                {
                    "name": "punctuation.definition.array.begin.rbasic",
                    "match": "\\["
                },
                {
                    "name": "punctuation.definition.array.end.rbasic",
                    "match": "\\]"
                },
                {
                    "name": "punctuation.definition.block.begin.rbasic",
                    "match": "\\{"
                },
                {
                    "name": "punctuation.definition.block.end.rbasic",
                    "match": "\\}"
                },
                {
                    "name": "punctuation.separator.comma.rbasic",
                    "match": ","
                },
                {
                    "name": "punctuation.terminator.statement.rbasic",
                    "match": ";"
                },
                {
                    "name": "punctuation.accessor.rbasic",
                    "match": "\\."
                }
            ]
        }
    }
}